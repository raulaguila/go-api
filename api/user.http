@host = http://127.0.0.1:9000
@lang = pt-BR

###

# @name login
POST {{host}}/auth HTTP/1.1
Content-Type: application/json
Accept-Language: {{lang}}

{
  "login": "admin@admin.com",
  "password": "12345678"
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
        client.global.set("accessToken", response.body.accesstoken);
    });
%}

### List all users

# @name getAll
GET {{host}}/user?page=1&limit=5&order=desc&sort=updated_at HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
    });
%}

###

# @name create
POST {{host}}/user HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}
Content-Type: application/json

{
  "email": "user@created.com",
  "name": "User Created",
  "profile_id": 1,
  "status": true
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 201, "Wrong status code");
        client.global.set("id", response.body.object.id);
        client.global.set("mail", response.body.object.email);
    });
%}

###

# @name getCreatedByID
GET {{host}}/user/{{id}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
        client.assert(response.body.email === "user@created.com", "Wrong created email");
        client.assert(response.body.name === "User Created", "Wrong created email");
    });
%}

###

# @name updateByID
PUT {{host}}/user/{{id}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}
Content-Type: application/json

{
  "email": "user@updated.com",
  "name": "User Updated",
  "profile_id": 1,
  "status": true
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
    });
%}

###

# @name getUpdatedByID
GET {{host}}/user/{{id}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
        client.assert(response.body.email === "user@updated.com", "Wrong updated email");
        client.assert(response.body.name === "User Updated", "Wrong updated name");
        client.global.set("mail", response.body.email);
    });
%}

###

# @name setUserPasswordWrong
PUT {{host}}/user/pass?email={{mail}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}
Content-Type: application/json

{
  "password": "secret",
  "password_confirm": "secret2"
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 400, "Wrong status code");
    });
%}

###

# @name setUserPassword
PUT {{host}}/user/pass?email={{mail}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}
Content-Type: application/json

{
  "password": "secret",
  "password_confirm": "secret"
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
    });
%}

###

# @name resetUserPassword
DELETE {{host}}/user/pass?email={{mail}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
    });
%}

###

# @name deleteByID
DELETE {{host}}/user HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}
Content-Type: application/json

{
  "ids": [{{id}}]
}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Wrong status code");
    });
%}

###

# @name getDeletedByID
GET {{host}}/user/{{id}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Accept-Language: {{lang}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 404, "Wrong status code");
    });
%}