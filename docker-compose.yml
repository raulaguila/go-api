name: go_api

volumes:

  api_postgres_volume:
    name: api_postgres_volume
  api_minio_volume:
    name: api_minio_volume

networks:

  go_api_network:
    name: go_api_network
    driver: bridge

services:

  postgres:

    hostname: postgres
    container_name: api_postgres
    image: postgres:14.7-alpine
    restart: always
    volumes:
      - api_postgres_volume:/var/lib/postgresql/data
    command: -p ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_BASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
    networks:
      - go_api_network
    profiles: [ all, prod, dev ]

  minio:

    hostname: minio
    container_name: api_minio
    image: bitnami/minio:2024
    restart: always
    volumes:
      - api_minio_volume:/bitnami/minio/data
    ports:
      - ${MINIO_API_PORT}:${MINIO_API_PORT}
      - ${MINIO_WEB_PORT}:${MINIO_WEB_PORT}
    environment:
      - TZ=${TZ}
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASS}
      - MINIO_API_PORT_NUMBER=${MINIO_API_PORT}
      - MINIO_CONSOLE_PORT_NUMBER=${MINIO_WEB_PORT}
    networks:
      - go_api_network
    profiles: [ all, prod, dev ]

  backend:

    container_name: api_backend
    build: .
    image: api_backend
    restart: always
    depends_on:
      - postgres
    ports:
      - ${API_PORT}:${API_PORT}
    tty: true
    environment:
      - TZ=${TZ}
    networks:
      - go_api_network
    profiles: [ all, prod ]